.program cppm_encoder

.define public CLOCKS_PER_COUNT 2

init:
  pull block ; The very first value configures pulse duration
  mov isr, osr

.wrap_target
begin_pulse:
  mov x, isr ; pulse duration
  pull block
  mov y, osr ; rising edge period
  set pins, 0

pulse_delay:
  jmp y-- nojmp_decrement_x
nojmp_decrement_x:
  jmp x-- pulse_delay

end_pulse:
  set pins, 1

sync_delay:
  jmp y-- sync_delay [1] ; delay to match pulse_delay loop
.wrap


% c-sdk {
static inline void cppm_encoder_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = cppm_encoder_program_get_default_config(offset);

    sm_config_set_set_pins(&c, pin, 1);
    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}
